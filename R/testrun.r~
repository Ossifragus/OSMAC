rm(list=ls())
library(mvtnorm)
ini.time <- Sys.time()
source("twostep.r")
source("getMLE.r")
n<-1000;
beta0  <- c(rep(1/2, 7))
d <- length(beta0)
corr  <- 0.5
sigmax  <- matrix(corr, d, d) + diag(1-corr, d)
set.seed(0)
rpt <- 30
X  <- rmvnorm(n, rep(0, d), sigmax)
P  <- 1 - 1 / (1 + exp(X %*% beta0))
Y  <- rbinom(n, 1, P)
##

r1 <- 200
r <- 300
lrs <- 1
Beta.simp <- matrix(NA, d, rpt*lrs)
nm <- 2
Beta.opt <- matrix(NA, d*nm, rpt*lrs)
itr <- 0

set.seed(0)
for (rr in 1:rpt) {
    itr <- itr+1
    fit.simp <- AlgTwoStp(r1+r, 0, "uni")
    Beta.simp[,itr] <- fit.simp$par
    fit.mmse <- AlgTwoStp(r1, r, "mmse")
    fit.mvc <- AlgTwoStp(r1, r, "mvc")
    Beta.opt[,itr] <- c(fit.mmse$par, fit.mvc$par)
}

l2.simp <- (Beta.simp - beta0)^2
l2.opt  <- (Beta.opt  - beta0)^2
mse.simp <- mse.opt <- c()
for (i in 1:lrs) {
    loc <- ((i-1)*rpt+1):(i*rpt)
    mse.simp <- c(mse.simp, sum(rowMeans(l2.simp[,loc], na.rm=TRUE)))
    mse.opt <- rbind(mse.opt, colSums(matrix(
        rowMeans(l2.opt[,loc], na.rm=TRUE), d, nm)))
}

rec <- cbind(mse.simp, mse.opt)

print(Sys.time() - ini.time)
print(rec)

